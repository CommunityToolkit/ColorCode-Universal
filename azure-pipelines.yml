trigger:
- main
- rel/*

pr:
- main
- rel/*

pool:
  vmImage: windows-2022

variables: 
  BuildConfiguration: Release

steps:
- task: BatchScript@1
  inputs:
    filename: "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat"
    arguments: -no_logo
    modifyEnvironment: true
  displayName: Setup Environment Variables
  
- task: NuGetToolInstaller@1
  displayName: Use NuGet 5.11.x
  inputs:
    versionSpec: 5.11.x

- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv
  displayName: Install NBGV tool

- script: nbgv cloud
  displayName: Set Version

- task: UseDotNet@2
  displayName: 'Install .NET SDK'
  inputs:
    version: 6.0.400
    performMultiLevelLookup: true

# Workaround for VS2022 in CI Builds
- bash: dotnet tool update -g dotnet-vs
- bash: vs modify --rel -sku:enterprise --quiet +Microsoft.Component.MSBuild +Microsoft.VisualStudio.Component.ManagedDesktop.Core +Microsoft.NetCore.Component.DevelopmentTools +Microsoft.VisualStudio.Workload.UniversalBuildTools +Microsoft.VisualStudio.ComponentGroup.UWP.BuildTools +Microsoft.VisualStudio.Workload.MSBuildTools +Microsoft.VisualStudio.Workload.ManagedDesktopBuildTools +Microsoft.VisualStudio.Component.Windows10SDK +Microsoft.VisualStudio.Component.Windows10SDK.17763 +Microsoft.VisualStudio.Component.Windows10SDK.18362 +Microsoft.VisualStudio.Component.Windows10SDK.19041 +Microsoft.VisualStudio.Component.Windows10SDK.20348 +Microsoft.VisualStudio.Component.Windows10SDK.22000 +Microsoft.VisualStudio.Workload.Universal

- powershell: .\build\Install-WindowsSdkISO.ps1 17763

- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: msbuild
    arguments: /t:restore .\ColorCode.sln
  displayName: NuGet restore

- powershell: .\build\build.ps1
  displayName: Build

- task: PublishBuildArtifacts@1
  displayName: Publish Package Artifacts
  condition: always()
  inputs:
    pathToPublish: .\msbuild.binlog
    artifactName: Binlogs

- task: PowerShell@2
  displayName: Authenticode Sign Packages
  inputs:
    filePath: build/Sign-Package.ps1
  env:
    SignClientUser: $(SignClientUser)
    SignClientSecret: $(SignClientSecret)
    ArtifactDirectory: build\nupkg
  condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

- task: PublishBuildArtifacts@1
  displayName: Publish Package Artifacts
  inputs:
    pathToPublish: .\build\nupkg
    artifactType: container
    artifactName: Packages
